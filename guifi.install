<?php
/**
 * @file
 * Install, update and uninstall functions for the guifi module.
 */

function guifi_uninstall() {

  drupal_uninstall_schema('guifi');

  variable_del('guifi_license');
  variable_del('guifi_title');
  variable_del('guifi_root');
  variable_del('guifi_forums');
  variable_del('guifi_contact');
  variable_del('hotspot_ssid');
  variable_del('guifi_loglevel');
  variable_del('guifi_maps');
  variable_del('guifi_decimal');
  variable_del('guifi_thousand');
}

function guifi_schema() {
  $schema['guifi_notify'] = array(
    'fields' => array (
      'id' => array (
        'type' => 'int',
        'size' => 'small',
        'unsigned' => true,
        'not null' => true,
      ),
      'timestamp' => array (
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
      ),
      'who_id' => array (
        'type' => 'int',
        'size' => 'medium',
        'unsigned' => true,
        'not null' => true,
      ),
      'who_name' => array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => true,
      ),
      'to_array' => array (
        'type' => 'varchar',
        'length' => '1024',
        'not null' => true,
      ),
      'subject' => array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => true,
      ),
      'body' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => true,
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'module' => 'guifi',
    'name' => 'guifi_notify',
  );
  $schema['guifi_location'] = array(
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'size' => 'medium',
        'not null' => true,
      ),
      'nick' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
        'default' => '',
      ),
      'zone_id' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => false,
        'comment' => 'foreign key to guifi_zone(id)',
      ),
      'zone_description' => array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => false,
      ),
      'lat' => array (
        'type' => 'numeric',
        'precision' => '10',
        'scale' => '6',
        'not null' => false,
      ),
      'lon' => array (
        'type' => 'numeric',
        'precision' => '10',
        'scale' => '6',
        'not null' => false,
      ),
      'elevation' => array (
        'type' => 'int',
        'size' => 'tiny',
        'not null' => false,
      ),
      'notification' => array (
        'type' => 'varchar',
        'length' => '1024',
        'not null' => true,
      ),
      'status_flag' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
        'default' => 'Planned',
      ),
      'stable' => array (
        'type' => 'varchar',
        'length' => '25',
        'not null' => true,
        'default' => 'Yes',
        'comment' => 'Yes,No',
      ),
      'graph_server' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
        'default' => 0,
        'comment' => 'FK to guifi_services (SNPGraphs)',
      ),
      'user_created' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
        'default' => 0,
      ),
      'user_changed' => array (
        'type' => 'int',
        'size' => 'medium',
        ' not null' => false,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => false,
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'indexes' => array (
      'lat_index' => array (
        0 => 'lat',
      ),
      'lon_index' => array (
        0 => 'lon',
      ),
      'zcs_index' => array (
        0 => 'zone_id',
        1 => 'timestamp_created',
        2 => 'status_flag',
      ),
      'year_index' => array (
        0 => 'timestamp_created',
      ),
      'status_index' => array (
        0 => 'status_flag',
      ),
    ),
    'module' => 'guifi',
    'name' => 'guifi_location',
  );
  $schema['guifi_networks'] = array(
    'comment' => 'allocates ipv4 address ranges to zones',
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'size' => 'small',
        'unsigned' => true,
        'not null' => true,
      ),
      'base' => array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => true,
        'default' => '',
      ),
      'mask' => array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => true,
        'default' => '255.255.255.0',
      ),
      'zone' => array (
        'type' => 'int',
        'size' => 'medium',
        'unsigned' => true,
        'not null' => true,
      ),
      'network_type' => array (
        'type' => 'varchar',
        'length' => '10',
        'not null' => true,
        'default' => 'public',
        'comment' => 'public, backbone',
      ),
      'user_created' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
        'default' => 0,
      ),
      'user_changed' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
        'default' => 0,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'unique keys' => array (
      'networks' => array (
        0 => array (
          0 => 'base',
          1 => 16,
        ),
        1 => array (
          0 => 'mask',
          1 => 16,
        ),
      ),
    ),
    'indexes' => array (
      'net_zone' => array (
        0 => 'zone',
      ),
    ),
    'module' => 'guifi',
    'name' => 'guifi_networks',
  );
  $schema['guifi_zone'] = array(
    'comment' => 'zone information, zones have a self hierarchy and group node locations',
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'size' => 'medium',
        'unsigned' => true,
        'not null' => true,
      ),
      'title' => array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => true,
        'default' => '',
      ),
      'nick' => array (
        'type' => 'varchar',
        'length' => '10',
        'not null' => false,
      ),
      'body' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => true,
      ),
      'master' => array (
        'type' => 'int',
        'size' => 'medium',
        'unsigned' => true,
        'not null' => true,
        'comment' => 'references parent zone guifi_zone(id)',
      ),
      'graph_server' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => false,
      ),
      'proxy_id' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
        'default' => 0,
        'comment' => 'FK to guifi_services (proxy)',
      ),
      'voip_id' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
        'default' => 0,
        'comment' => 'FK to guifi_services (VoIP)',
      ),
      'time_zone' => array (
        'type' => 'varchar',
        'length' => '15',
        'not null' => true,
      ),
      'dns_servers' => array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => false,
      ),
      'ntp_servers' => array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => false,
      ),
      'homepage' => array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => false,
      ),
      'notification' => array (
        'type' => 'varchar',
        'length' => '1024',
        'not null' => true,
      ),
      'ospf_zone' => array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => false,
      ),
      'minx' => array (
        'type' => 'numeric',
        'precision' => '10',
        'scale' => '6',
        'not null' => false,
      ),
      'miny' => array (
        'type' => 'numeric',
        'precision' => '10',
        'scale' => '6',
        'not null' => false,
      ),
      'maxx' => array (
        'type' => 'numeric',
        'precision' => '10',
        'scale' => '6',
        'not null' => false,
      ),
      'maxy' => array (
        'type' => 'numeric',
        'precision' => '10',
        'scale' => '6',
        'not null' => false,
      ),
      'local' => array (
        'comment' => 'Yes, No',
        'type' => 'varchar',
        'length' => '5',
        'not null' => true,
        'default' => 'Yes',
      ),
      'nodexchange_url' => array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => false,
      ),
      'refresh' => array (
        'type' => 'int',
        'not null' => false,
      ),
      'remote_server_id' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => false,
      ),
      'host_nodes' => array (
        'type' => 'int',
        'size' => 'small',
        'not null' => false,
        'default' => 0,
        'comment' => 'The zone can host nodes? (TRUE=1, FALSE=0)',
      ),
      'weight' => array (
        'type' => 'int',
        'size' => 'tiny',
        'not null' => true,
        'default' => 0,
      ),
      'user_created' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
        'default' => 0,
      ),
      'user_changed' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
        'default' => 0,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'indexes' => array (
      'name' => array (
        0 => array (
          0 => 'title',
          1 => 10,
        ),
      ),
      'master_index' => array (
        0 => 'master',
      ),
    ),
    'module' => 'guifi',
    'name' => 'guifi_zone',
  );
  $schema['guifi_devices'] = array(
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'size' => 'medium',
        'not null' => true,
      ),
      'nid' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
        'comment' => 'foreign key to guifi_location(id)',
      ),
      'nick' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
      ),
      'type' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
      ),
      'notification' => array (
        'type' => 'varchar',
        'length' => '1024',
        'not null' => true,
      ),
      'mac' => array (
        'type' => 'varchar',
        'length' => '20',
        'not null' => true,
        'default' => '00:00:00:00:00:00',
      ),
      'mainipv4' => array (
        'type' => 'varchar',
        'length' => '20',
      ),
      'comment' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
      ),
      'flag' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
        'default' => 'Planned',
      ),
      'extra' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
        'comment' => 'store variable data depending on guifi_devices(type)',
      ),
      'usc_id' => array (
        'type' => 'int',
        'not null' => true,
        'comment' => 'UnSolClic template id',
      ),
      'mid' => array (
        'type' => 'int',
        'not null' => true,
        'comment' => 'Model Id',
      ),
      'fid' => array (
        'type' => 'int',
        'not null' => true,
        '' => 'Firmware Id',
      ),
      'graph_server' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
        'default' => 0,
        'comment' => 'FK to guifi_services (SNPGraphs)',
      ),
      'logserver' => array (
        'type' => 'varchar',
        'length' => '60',
        'not null' => true,
        'comment' => 'Ip Server Logs',
      ),
      'last_online' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
        'comment' => 'Last time that this device has been seen online',
      ),
      'last_flag' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
        'default' => 'N/A',
        'comment' => 'N/A, Online, Offline...',
      ),
      'ly_availability' => array (
        'type' => 'numeric',
        'precision' => '11',
        'scale' => '2',
        'not null' => false,
        'default' => NULL,
      ),
      'last_stats' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
        'comment' => 'Last time that this device has been loaded with statistics',
      ),
      'latency_avg' => array (
        'type' => 'int',
        'size' => 'small',
        'not null' => true,
        'default' => 0,
        'comment' => 'Average latency',
      ),
      'latency_max' => array (
        'type' => 'int',
        'size' => 'small',
        'not null' => true,
        'default' => 0,
        'comment' => 'Maximum latency',
      ),
      'user_created' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'user_changed' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'unique keys' => array (
      'nick' => array (
        0 => 'nick',
      ),
    ),
    'indexes' => array (
      'nid_index' => array (
        0 => 'nid',
      ),
    ),
    'module' => 'guifi',
    'name' => 'guifi_devices',
  );
  $schema['guifi_links'] = array(
    'comment' => 'devices/interfaces linked, one row per peer joined by guifi_links(id)',
    'fields' => array (
      'id' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'nid' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'device_id' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'interface_id' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'ipv4_id' => array (
        'type' => 'int',
        'size' => 'tiny',
        'not null' => true,
      ),
      'link_type' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
      ),
      'routing' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => false,
      ),
      'flag' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
        'default' => 'Planned',
      ),
    ),
    'primary key' => array (
      0 => 'device_id',
      1 => 'id',
    ),
    'indexes' => array (
      'id' => array (
        0 => 'id',
      ),
      'device_index' => array (
        0 => 'device_id',
      ),
      'nid_index' => array (
        0 => 'nid',
      ),
    ),
    'module' => 'guifi',
    'name' => 'guifi_links',
  );
  $schema['guifi_interfaces'] = array(
    'comment' => 'describes interfaces (network connectors) at the devices',
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'size' => 'medium',
        'not null' => true,
      ),
      'device_id' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
        'comment' => 'foreign key to guifi_devices(id)',
      ),
      'radiodev_counter' => array (
        'type' => 'int',
        'size' => 'tiny',
        'not null' => false,
        'comment' => 'if not NULL, foreign key to guifi_radios(radiodev_counter)',
      ),
      'etherdev_counter' => array (
        'type' => 'int',
        'size' => 'tiny',
        'not null' => false,
        'comment' => 'if not NULL, foreign key to guifi_radios(etherdev_counter)',
      ),
      'interface_class' => array (
        'type' => 'varchar',
        'length' => 40,
        'NOT NULL' => false,
        'comment' => 'radio, ethernet, bridge, bonding, vlan, wds/p2p, virtualAP, tunnels ...',
      ),
      'interface_type' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
      ),
      'related_interfaces' => array (
        'type' => 'varchar',
        'length' => 120,
        'NOT NULL' => false,
        'comment' => 'FK to parent interfaces (vlans, bondings, bridges...',
      ),
      'mac' => array (
        'type' => 'varchar',
        'length' => '20',
        'not null' => true,
        'default' => '00:00:00:00:00:00',
      ),
      'connector_type' => array (
        'type' => 'varchar',
        'length' => 10,
        'comment' => 'connector type (RJ45,FO LX,SC...)',
      ),
      'vlan' => array (
        'type' => 'varchar',
        'length' => 10,
        'comment' => 'vlan (if have)',
      ),
      'comments' => array (
        'type' => 'varchar',
        'length' => 64,
        'comment' => 'Additional info/comments',
      ),
      'connto_did' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => false,
        'comment' => 'connected to (device)',
      ),
      'connto_iid' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => false,
        'comment' => 'connected to (interface)',
      ),
    ),
    'primary key' => array (
      0 => 'device_id',
      1 => 'id',
    ),
    'indexes' => array (
      'id' => array (
        0 => 'id',
      ),
    ),
    'module' => 'guifi',
    'name' => 'guifi_interfaces',
  );
  $schema['guifi_radios'] = array(
    'comment' => 'describes wireless radios available on the guifi_devices',
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'not null' => true,
        'comment' => 'primary key 1st column and foreign key to guifi_devices(id)',
      ),
      'radiodev_counter' => array (
        'type' => 'int',
        'size' => 'tiny',
        'not null' => true,
        'default' => 0,
        'comment' => 'primary key 2nd column',
      ),
      'etherdev_counter' => array (
        'type' => 'int',
        'size' => 'tiny',
        'not null' => false,
        'comment' => '',
      ),
      'nid' => array (
        'comment' => 'foreign key to guifi_location(id)',
        'type' => 'int',
        'not null' => true,
      ),
      'model_id' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'ssid' => array (
        'type' => 'varchar',
        'length' => '128',
        'not null' => true,
        'default' => '',
      ),
      'mode' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
      ),
      'protocol' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
        'default' => '802.11bg',
      ),
      'channel' => array (
        'type' => 'int',
        'not null' => false,
      ),
      'chbandwith' => array (
        'comment' => 'Channel Bandwith',
        'type' => 'varchar',
        'length' => '8',
        'not null' => true,
        'default' => '20Mhz',
      ),
      'antenna_angle' => array (
        'type' => 'int',
        'not null' => false,
        'default' => 0,
      ),
      'antenna_gain' => array (
        'type' => 'int',
        'not null' => false,
      ),
      'antenna_azimuth' => array (
        'type' => 'int',
        'not null' => false,
        'default' => 360,
      ),
      'antenna_mode' => array (
        'type' => 'varchar',
        'length' => '5',
        'not null' => true,
      ),
      'mac' => array (
        'type' => 'varchar',
        'length' => '20',
      ),
      'ly_mb_in' => array (
        'type' => 'numeric',
        'precision' => '10',
        'scale' => '0',
        'not null' => false,
        'default' => NULL,
      ),
      'ly_mb_out' => array (
        'type' => 'numeric',
        'precision' => '10',
        'scale' => '0',
        'not null' => false,
        'default' => NULL,
      ),
      'clients_accepted' => array (
        'comment' => 'Yes, No',
        'type' => 'varchar',
        'length' => '5',
        'not null' => false,
        'default' => 'Yes',
      ),
      'fund_required' => array (
        'comment' => 'Null n/d, free, yes',
        'type' => 'varchar',
        'length' => '5',
        'not null' => false,
      ),
      'fund_amount' => array (
        'type' => 'numeric',
        'not null' => true,
        'default' => 0,
        'precision' => '10',
        'scale' => '2',
      ),
      'fund_currency' => array (
        'type' => 'varchar',
        'length' => '10',
        'not null' => true,
        'default' => 'Euros',
      ),
    ),
    'primary key' => array (
      0 => 'id',
      1 => 'radiodev_counter',
    ),
    'indexes' => array (
      'nid' => array (
        0 => 'nid',
      ),
    ),
    'module' => 'guifi',
    'name' => 'guifi_radios',
  );
  $schema['guifi_types'] = array(
    'comment' => 'used on web dialogs to decode values or validate values',
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'not null' => true,
      ),
      'type' => array (
        'type' => 'varchar',
        'length' => '15',
        'not null' => true,
      ),
      'text' => array (
        'type' => 'varchar',
        'length' => '24',
        'not null' => true,
      ),
      'description' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => true,
      ),
      'relations' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
      ),
    ),
    'primary key' => array (
      0 => 'id',
      1 => 'type',
    ),
    'indexes' => array (
      'text' => array (
        0 => 'text',
      ),
    ),
    'module' => 'guifi',
    'name' => 'guifi_types',
  );
  $schema['guifi_services'] = array(
    'comment' => 'store guifi services',
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'not null' => true,
      ),
      'nick' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
        'default' => '',
      ),
      'service_type' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
        'default' => '',
      ),
      'zone_id' => array (
        'type' => 'int',
        'not null' => false,
        'comment' => 'foreign key to guifi_zone(id)',
      ),
      'device_id' => array (
        'type' => 'int',
        'not null' => false,
        'comment' => 'foreign key to guifi_device(id)',
      ),
      'notification' => array (
        'type' => 'varchar',
        'length' => '1024',
        'not null' => false,
      ),
      'status_flag' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
        'default' => 'Planned',
      ),
      'extra' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
      ),
      'user_created' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'user_changed' => array (
        'type' => 'int',
        'not null' => false,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => false,
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'indexes' => array (
      'zone_index' => array (
        0 => 'zone_id',
      ),
    ),
    'module' => 'guifi',
    'name' => 'guifi_services',
  );
  $schema['guifi_users'] = array(
    'comment' => 'stores user credentials assigned to nodes for proxy servers, or any other service',
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'unsigned' => true,
        'not null' => true,
      ),
      'nid' => array (
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
        'default' => 0,
        'comment' => 'foreign key to guifi_location(id)',
      ),
      'services' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => true,
      ),
      'firstname' => array (
        'type' => 'varchar',
        'length' => '60',
        'not null' => true,
        'default' => '',
      ),
      'lastname' => array (
        'type' => 'varchar',
        'length' => '60',
        'not null' => true,
        'default' => '',
      ),
      'username' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
        'default' => '',
      ),
      'password' => array (
        'type' => 'varchar',
        'length' => '128',
        'not null' => true,
        'default' => '',
      ),
      'notification' => array (
        'type' => 'varchar',
        'length' => '1024',
        'not null' => false,
      ),
      'extra' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
      ),
      'user_created' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'user_changed' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'status' => array (
        'type' => 'varchar',
        'length' => 25,
        'not null' => true,
        'default' => 'new',
        'comment' => 'pending/approved/rejected',
      ),
      'content_filters' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
        'default' => NULL,
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'unique keys' => array (
      'username' => array (
        0 => 'username',
      ),
    ),
    'module' => 'guifi',
    'name' => 'guifi_users',
  );
  $schema['guifi_ipv4'] = array(
    'fields' => array (
      'id' => array (
        'type' => 'int',
        'not null' => true,
        'comment' => 'primary key 1st column, numbers the sequential order of each address into the same interface',
      ),
      'interface_id' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
        'comment' => 'primary key 2nd column and foreign key to guifi_interfaces(id)',
      ),
      'ipv4' => array (
        'type' => 'varchar',
        'length' => '16',
        'not null' => false,
      ),
      'netmask' => array (
        'type' => 'varchar',
        'length' => '16',
        'not null' => true,
        'default' => '255.255.255.0',
      ),
      'ipv4_type' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'zone_id' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
    ),
    'primary key' => array (
      0 => 'interface_id',
      1 => 'id',
    ),
    'unique keys' => array (
      'ipv4' => array (
        0 => 'ipv4',
      ),
    ),
    'module' => 'guifi',
    'name' => 'guifi_ipv4',
  );
  $schema['guifi_manufacturer'] = array(
    'comment' => 'device manufacturers',
    'fields' => array (
      'fid' => array (
        'type' => 'serial',
        'not null' => true,
      ),
      'name' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
        'default' => '',
      ),
      'url' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => false,
      ),
      'notification' => array (
        'type' => 'varchar',
        'length' => '1024',
        'not null' => true,
      ),
      'user_created' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'user_changed' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => true,
      ),
    ),
    'primary key' => array (
      0 => 'fid',
    ),
    'module' => 'guifi',
    'name' => 'guifi_manufacturer',
  );
  $schema['guifi_model_specs'] = array(
    'comment' => 'device models',
    'fields' => array (
      'mid' => array (
        'type' => 'serial',
        'not null' => true,
      ),
      'fid' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
        'comment' => 'foreign key to guifi_manufacturer(fid)',
      ),
      'model' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
        'default' => '',
      ),
      'model_class' => array (
        'type' => 'varchar',
        'length' => '240',
        'not null' => true,
        'default' => 'wireless|router',
        'comment' => 'device category (radio, router, switch...)',
      ),
      'type' => array (
        'type' => 'varchar',
        'length' => '10',
        'not null' => false,
        'comment' => 'Extern, PCI, PCMCIA',
      ),
      'radiodev_max' => array (
        'type' => 'int',
        'size' => 'tiny',
        'not null' => true,
        'default' => 1,
      ),
      'etherdev_max' => array (
        'type' => 'int',
        'size' => 'tiny',
        'not null' => true,
        'default' => 1,
      ),
      'optoports_max' => array (
        'type' => 'int',
        'size' => 'tiny',
        'not null' => true,
        'default' => 0,
      ),
      'rackeable' => array (
        'type' => 'int',
        'size' => 'tiny',
        'not null' => true,
        'default' => 0,
        'comment' => 'Rackeable (>0 true, # of Us)',
      ),
      'AP' => array (
        'type' => 'varchar',
        'length' => '5',
        'not null' => false,
        'comment' => 'Si, No',
      ),
      'virtualAP' => array (
        'type' => 'varchar',
        'length' => '5',
        'not null' => true,
        'default' => 'No',
        'comment' => 'Yes, No',
      ),
      'client' => array (
        'type' => 'varchar',
        'length' => '5',
        'not null' => false,
        'comment' => 'Si, No, Hack',
      ),
      'interfaces' => array (
        'type' => 'varchar',
        'length' => '240',
        'not null' => false,
        'comment' => 'Cable Interfaces',
      ),
      'winterfaces' => array (
        'type' => 'varchar',
        'length' => '240',
        'not null' => false,
        'comment' => 'Wireless Interfaces',
      ),
      'opto_interfaces' => array (
        'type' => 'varchar',
        'length' => '240',
        'not null' => false,
        'comment' => 'map to ethernet interafaces',
      ),
      'url' => array (
        'type' => 'varchar',
        'length' => '240',
        'not null' => false,
      ),
      'comments' => array (
        'type' => 'varchar',
        'length' => '240',
        'not null' => false,
      ),
      'supported' => array (
        'type' => 'varchar',
        'length' => '25',
        'not null' => true,
        'default' => 'Yes',
        'comment' => 'Yes, No',
      ),
      'notification' => array (
        'type' => 'varchar',
        'length' => '1024',
        'not null' => true,
      ),
      'user_created' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'user_changed' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => true,
      ),
    ),
    'primary key' => array (
      0 => 'mid',
    ),
    'module' => 'guifi',
    'name' => 'guifi_model_specs',
  );
  $schema['guifi_dns_domains'] = array(
    'comment' => 'store guifi dns domains',
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'not null' => true,
      ),
      'sid' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'name' => array (
        'type' => 'varchar',
        'length' => '40',
        'not null' => true,
      ),
      'type' => array (
        'type' => 'varchar',
        'length' => '16',
        'not null' => true,
      ),
      'public' => array (
        'type' => 'varchar',
        'length' => '5',
        'not null' => true,
        'default' => 'yes',
      ),
      'ipv4' => array (
        'type' => 'varchar',
        'length' => '16',
        'not null' => true,
      ),
      'defipv4' => array (
        'type' => 'varchar',
        'length' => '16',
        'not null' => true,
      ),
      'defipv6' => array (
        'type' => 'varchar',
        'length' => '128',
        'not null' => true,
      ),
      'mname' => array (
        'type' => 'varchar',
        'length' => '32',
        'not null' => true,
      ),
      'scope' => array (
        'type' => 'varchar',
        'length' => '16',
        'not null' => true,
      ),
      'management' => array (
        'type' => 'varchar',
        'length' => '16',
        'not null' => true,
      ),
      'allow' => array (
        'type' => 'varchar',
        'length' => '24',
        'not null' => true,
      ),
      'externalmx' => array (
        'type' => 'varchar',
        'length' => '128',
        'not null' => true,
      ),
      'externalns' => array (
        'type' => 'varchar',
        'length' => '128',
        'not null' => true,
      ),
      'notification' => array (
        'type' => 'varchar',
        'length' => '1024',
        'not null' => true,
      ),
      'comment' => array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
      ),
      'user_created' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'user_changed' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => true,
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'module' => 'guifi',
    'name' => 'guifi_dns_domains',
  );
  $schema['guifi_dns_hosts'] = array(
    'comment' => 'store guifi dns hosts',
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'not null' => true,
      ),
      'counter' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'host' => array (
        'type' => 'varchar',
        'length' => '128',
        'not null' => true,
      ),
      'ipv4' => array (
        'type' => 'varchar',
        'length' => '16',
        'not null' => true,
      ),
      'ipv6' => array (
        'type' => 'varchar',
        'length' => '128',
        'not null' => true,
      ),
      'aliases' => array (
        'type' => 'varchar',
        'length' => '1024',
        'not null' => true,
      ),
      'options' => array (
        'type' => 'varchar',
        'length' => '1024',
        'not null' => true,
      ),
      'user_created' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'user_changed' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => true,
      ),
    ),
    'primary key' => array (
      0 => 'id',
      1 => 'counter',
    ),
    'module' => 'guifi',
    'name' => 'guifi_dns_hosts',
  );
  $schema['guifi_api_tokens'] = array(
    'comment' => 'store guifi api tokens',
    'fields' => array (
      'uid' => array (
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
      ),
      'token' => array (
        'type' => 'varchar',
        'length' => '255',
        'not null' => true,
      ),
      'created' => array (
        'type' => 'int',
        'not null' => false,
      ),
      'rand_key' => array (
        'type' => 'int',
        'not null' => true,
      ),
    ),
    'primary key' => array (
      0 => 'uid',
    ),
    'module' => 'guifi',
    'name' => 'guifi_api_tokens',
  );
  $schema['guifi_firmware'] = array(
    'comment' => 'have the supported firmwares, status and describes their capabilities',
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'not null' => true,
      ),
      'nom' => array (
        'type' => 'varchar',
        'length' => '45',
        'not null' => true,
      ),
      'descripcio' => array (
        'type' => 'varchar',
        'length' => '45',
        'not null' => true,
      ),
      'relations' => array (
        'type' => 'varchar',
        'length' => '45',
      ),
      'managed' => array (
        'type' => 'varchar',
        'length' => '100',
      ),
      'enabled' => array (
        'type' => 'int',
        'size' => 'tiny',
        'not null' => false,
        'default' => 0,
      ),
      'notification' => array (
        'type' => 'varchar',
        'length' => '1024',
        'not null' => true,
      ),
      'user_created' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'user_changed' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => true,
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'module' => 'guifi',
    'name' => 'guifi_firmware',
  );
  $schema['guifi_maintainers'] = array(
    'comment' => 'device maintainers',
    'fields' => array (
      'id' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
        'disp-width' => '11',
      ),
      'supplier_id' => array (
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
        'disp-width' => '11',
        'default' => 0,
        'comment' => 'Foreign key to supplier',
      ),
      'subject_id' => array (
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
        'disp-width' => '11',
        'default' => 0,
        'comment' => 'Foreign key to subject maintained (zone/node/device...)',
      ),
      'subject_type' => array (
        'type' => 'varchar',
        'length' => 15,
        'not null' => true,
        'default' => '',
        'comment' => 'subject type (values zone, node, device....)',
      ),
      'commitment' => array (
        'type' => 'varchar',
        'length' => 15,
        'not null' => true,
        'default' => '',
        'comment' => 'type of commitment: volunteer, FO, Wireless...',
      ),
      'sla' => array (
        'type' => 'varchar',
        'length' => 15,
        'not null' => true,
        'default' => '',
        'comment' => 'SLA: bone, 24x7, 8x5...',
      ),
      'sla_resp' => array (
        'type' => 'int',
        'size' => 'small',
        'not null' => false,
        'comment' => 'Objective for response time',
      ),
      'sla_fix' => array (
        'type' => 'int',
        'size' => 'small',
        'not null' => false,
        'comment' => 'Objective for solving time',
      ),
      'weight' => array (
        'type' => 'int',
        'size' => 'small',
        'not null' => false,
      ),
      'comment' => array (
        'type' => 'text',
        'not null' => false,
      ),
      'user_created' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
        'default' => 0,
      ),
      'user_changed' => array (
        'type' => 'int',
        'size' => 'medium',
        ' not null' => false,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => false,
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'module' => 'guifi',
    'name' => 'guifi_maintainers',
  );
  $schema['guifi_funders'] = array(
    'comment' => 'device funders',
    'fields' => array (
      'id' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
        'disp-width' => '11',
      ),
      'supplier_id' => array (
        'type' => 'int',
        'unsigned' => true,
        'not null' => false,
        'disp-width' => '11',
        'default' => 0,
        'comment' => 'Foreign key to supplier',
      ),
      'user_id' => array (
        'type' => 'int',
        'size' => 'medium',
        'unsigned' => true,
        'not null' => false,
        'disp-width' => '11',
        'default' => 0,
        'comment' => 'Foreign key to userid',
      ),
      'comment' => array (
        'type' => 'text',
        'not null' => true,
      ),
      'subject_id' => array (
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
        'disp-width' => '11',
        'default' => 0,
        'comment' => 'Foreign key to subject maintained (node/device...)',
      ),
      'subject_type' => array (
        'type' => 'varchar',
        'length' => 15,
        'not null' => true,
        'default' => '',
        'comment' => 'subject type (values node, device....)',
      ),
      'weight' => array (
        'type' => 'int',
        'size' => 'small',
        'not null' => false,
      ),
      'user_created' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
        'default' => 0,
      ),
      'user_changed' => array (
        'type' => 'int',
        'size' => 'medium',
        ' not null' => false,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
        'default' => 0,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => false,
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'module' => 'guifi',
    'name' => 'guifi_funders',
  );
  $schema['guifi_caracteristica'] = array(
    'comment' => 'Caracteristiques',
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'not null' => true,
      ),
      'nom' => array (
        'type' => 'varchar',
        'length' => 45,
        'not null' => true,
      ),
      'tipus' => array (
        'type' => 'varchar',
        'length' => 15,
        'not null' => true,
      ),
      'notification' => array (
        'type' => 'varchar',
        'length' => 1024,
        'not null' => true,
      ),
      'user_created' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'user_changed' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => true,
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'module' => 'guifi',
    'name' => 'guifi_caracteristica',
  );
  $schema['guifi_configuracioUnSolclic'] = array(
    'comment' => 'UnSolclic Configurations',
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'not null' => true,
      ),
      'mid' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'fid' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'enabled' => array (
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => true,
        'default' => 0,
      ),
      'snmp_id' => array (
        'type' => 'varchar',
        'length' => 32,
        'not null' => true,
      ),
      'plantilla' => array (
        'type' => 'text',
      ),
      'tipologia' => array (
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => true,
        'not null' => true,
        'default' => 0,
      ),
      'notification' => array (
        'type' => 'varchar',
        'length' => 1024,
        'not null' => true,
      ),
      'user_created' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'user_changed' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'template_file' => array (
        'type' => 'varchar',
        'length' => 45,
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'module' => 'guifi',
    'name' => 'guifi_configuracioUnSolclic',
  );
  $schema['guifi_parametresConfiguracioUnsolclic'] = array(
    'comment' => 'Parameters forUnSolclic Configurations',
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'not null' => true,
      ),
      'pid' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'uscid' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'valor' => array (
        'type' => 'varchar',
        'length' => 255,
        'not null' => true,
      ),
      'dinamic' => array (
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => true,
        'not null' => true,
        'default' => 0,
      ),
      'notification' => array (
        'type' => 'varchar',
        'length' => 1024,
        'not null' => true,
      ),
      'user_created' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'user_changed' => array (
        'type' => 'int',
        'size' => 'medium',
      ),
      'timestamp_created' => array (
        'type' => 'int',
      ),
      'timestamp_changed' => array (
        'type' => 'int',
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'module' => 'guifi',
    'name' => 'guifi_parametresConfiguracioUnsolclic',
  );
  $schema['guifi_parametres'] = array(
    'comment' => 'Parameters forUnSolclic',
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'not null' => true,
      ),
      'nom' => array (
        'type' => 'varchar',
        'length' => 45,
        'not null' => false,
      ),
      'default_value' => array (
        'type' => 'varchar',
        'length' => 45,
        'not null' => false,
      ),
      'origen' => array (
        'type' => 'varchar',
        'length' => 80,
        'not null' => false,
      ),
      'dinamic' => array (
        'type' => 'int',
        'size' => 'tiny',
        'not null' => false,
        'default' => 0,
      ),
      'notification' => array (
        'type' => 'varchar',
        'length' => 1024,
        'not null' => true,
      ),
      'user_created' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'user_changed' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => true,
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'module' => 'guifi',
    'name' => 'guifi_parametres',
  );
  $schema['guifi_parametresFirmware'] = array(
    'comment' => 'Parameters firmware',
    'fields' => array (
      'id' => array (
        'type' => 'serial',
        'not null' => true,
      ),
      'fid' => array (
        'type' => 'int',
        'not null' => false,
      ),
      'pid' => array (
        'type' => 'int',
        'not null' => false,
      ),
      'notification' => array (
        'type' => 'varchar',
        'length' => 1024,
        'not null' => true,
      ),
      'user_created' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'user_changed' => array (
        'type' => 'int',
        'size' => 'medium',
        'not null' => true,
      ),
      'timestamp_created' => array (
        'type' => 'int',
        'not null' => true,
      ),
      'timestamp_changed' => array (
        'type' => 'int',
        'not null' => true,
      ),
    ),
    'primary key' => array (
      0 => 'id',
    ),
    'module' => 'guifi',
    'name' => 'guifi_parametresFirmware',
  );

  return $schema;
}

/**
 * Implements hook_install().
 */

function guifi_install() {


}

function guifi_update_7000() {

// Replace all guifi_noce content type to guifi_location.

  db_update('node')
    ->expression('type', 'replace(type, \'guifi_node\', \'guifi_location\')')
    ->execute();

  db_update('subscriptions')
    ->expression('value', 'replace(value, \'guifi_node\', \'guifi_location\')')
    ->execute();

  db_update('subscriptions_queue')
    ->expression('value', 'replace(value, \'guifi_node\', \'guifi_location\')')
    ->execute();

  db_update('field_config_instance')
    ->expression('bundle', 'replace(bundle, \'guifi_node\', \'guifi_location\')')
    ->expression('bundle', 'replace(bundle, \'comment_node_guifi_node\', \'comment_node_guifi_location\')')
    ->execute();

  db_update('field_data_body')
    ->expression('bundle', 'replace(bundle, \'guifi_node\', \'guifi_location\')')
    ->execute();
  
  db_update('field_data_comment_body')
    ->expression('bundle', 'replace(bundle, \'comment_node_guifi_node\', \'comment_node_guifi_location\')')
    ->execute();

  db_update('field_data_upload')
    ->expression('bundle', 'replace(bundle, \'guifi_node\', \'guifi_location\')')
    ->execute();

  db_update('field_revision_body')
    ->expression('bundle', 'replace(bundle, \'guifi_node\', \'guifi_location\')')
    ->execute();

  db_update('field_revision_upload')
    ->expression('bundle', 'replace(bundle, \'guifi_node\', \'guifi_location\')')
    ->execute();
}
